openapi: 3.0.0
servers:
  - url: //petstore.swagger.io/v2
    description: Default server
  - url: //petstore.swagger.io/sandbox
    description: Sandbox server
info:
  description: |
    This is a sample server Petstore server.
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
    For this sample, you can use the api key `special-key` to test the authorization filters.

    # Introduction
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # OpenAPI Specification
    This API is documented in **OpenAPI format** and is based on
    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard
    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).

    # Cross-Origin Resource Sharing
    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
    And that allows cross-domain communication from the browser.
    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.

    # Authentication

    Petstore offers two forms of authentication:
      - API Key
      - OAuth2
    OAuth2 - an open protocol to allow secure authorization in a simple
    and standard method from web, mobile and desktop applications.

    <SecurityDefinitions />

  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: API Support
    email: apiteam@swagger.io
    url: https://github.com/Redocly/redoc
  x-logo:
    url: 'https://redocly.github.io/redoc/petstore-logo.png'
    altText: Petstore logo
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: 'https://github.com/Rebilly/generator-openapi-repo'
tags:
  - name: pet
    description: Everything about your Pets
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
  - name: pet_model
    x-displayName: The Pet Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Pet" />
  - name: store_model
    x-displayName: The Order Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Order" exampleRef="#/components/examples/Order" showReadOnly={true} showWriteOnly={true} />
x-tagGroups:
  - name: General
    tags:
      - pet
      - store
  - name: User Management
    tags:
      - user
  - name: Models
    tags:
      - pet_model
      - store_model
paths:
  /{clientId}:
        summary: Provides RESTful services for specified Clients (LP Only)
        get:
            summary: Returns the specified Client
            tags:
                - client-controller
            operationId: /clients/{clientId}
            parameters:
                - in: header
                  name: tenant-id
                  required: true
                  schema:
                      type: integer
                      format: int64
                      example: 123456789000
                  description: Tenant ID. Automatically populated, no need to send with request
                - name: clientId
                  description: Related client ID
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
                      example: 123456789000
            responses:
                "200":
                    description: OK
                    content:
                        "*/*":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/ClientDTO"
                "404":
                    description: Client not found
        delete:
            summary: Removes the specified Client
            tags:
                - client-controller
            operationId: deleteClient
            parameters:
                - name: clientId
                  description: Related client ID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
                    example: 123456789000
            responses:
                '200':
                    description: OK
                    content:
                        "*/*":
                            schema:
                                type: string
components:
  schemas:
    ClientDTO:
            type: object
            properties:
                id:
                    description: Client ID
                    type: integer
                    format: int64
                    example: 123456789000
                email:
                    description: Email of Client
                    type: string
                firstName:
                    description: First name of Client
                    type: string
                lastName:
                    description: Last name of Client
                    type: string
                avatar:
                    description: Avatar
                    type: string
                phone:
                    description: Phone Number of Client
                    type: string
                status:
                    description: Status of Client
                    type: string
                    example: normal
                centralAccount:
                    description: Deprecated
                    type: integer
                    format: int32
                    example: N/A
                centralAccountId:
                    description: Deprecated
                    type: integer
                    format: int64
                    example: 123456789000
                tenantId:
                    description: Tenant ID of Client
                    type: integer
                    format: int64
                    example: 123456789000
                dataCreateTime:
                    description: Date of creation
                    type: string
                    format: date-time
                    example: 2022-06-25 12:30:00
                dataUpdateTime:
                    description: Date of last update
                    type: string
                    format: date-time
                    example: 2022-06-25 12:30:00
                dataIsDeleted:
                    description: Bool (0/1)
                    type: integer
                    format: int32
                    example: 0
                dataStatus:
                    description: Data Status
                    type: string
                    example: valid
                countryAlpha2Code:
                    description: Country code (2 character)
                    type: string
                    example: GB
                role:
                    description: Deprecated
                    type: string
                position:
                    description: Deprecated
                    type: string
                areaCode:
                    description: Phone number area code
                    type: string
                    example: 44
                phoneCurrencyCode:
                    description: Country code (2 character)
                    type: string
                    example: GB
                timeZone:
                    description: UTC offset of Time Zone
                    type: integer
                    format: int32
                    example: -2
                timeZoneText:
                    description: Time zone name
                    type: string
                    example: Brazil/DeNoronha
                language:
                    description: Language code
                    type: string
                    example: en
                currencyCode:
                    description: Currency code (3 character)
                    type: string
                    example: GBP
